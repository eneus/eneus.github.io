<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microcontroller on Ivan Fesiuk - #Full Stack Developer | Personal Blog</title>
    <link>https://eneus.github.io/tags/microcontroller/</link>
    <description>Recent content in Microcontroller on Ivan Fesiuk - #Full Stack Developer | Personal Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://eneus.github.io/tags/microcontroller/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A FIFO Buffer Implementation</title>
      <link>https://eneus.github.io/blog/a_fifo_buffer_implementation/</link>
      <pubDate>Sun, 23 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eneus.github.io/blog/a_fifo_buffer_implementation/</guid>
      <description>A FIFO buffer is a useful way of storing data that arrives to a microcontroller peripheral asynchronously but cannot be read immediately. One example is storing bytes incoming on a UART. Buffering the bytes eases the real-time requirements for the embedded firmware.
A FIFO buffer stores data on a first-in, first-out basis. The storage structure is typically an array of contiguous memory. Data is written to the “head” of the buffer and read from the “tail”.</description>
    </item>
    
  </channel>
</rss>